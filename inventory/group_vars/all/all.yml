# Base Anthos Version
anthos_version: '1.3.0-gke.16'

# Base Path for files that are sensitive e.g ssl certificates, files with passwords, Anthos service-account
# key files
# Path used when accessing files on GKE Admin workstation
remote_secrets_path: '/home/{{ ansible_user }}/gke_admin_wrkst_private'

# Path used when accessing files on Ansible control host
local_secrets_path: "/home/{{ lookup ('env', 'USER') }}/gke_admin_wrkst_private"

#####
# Virtual Center Configuration that will be used to deploy GKE Admin Workstation
# and all GKE on-prem clusters (admin and user)
# All varibles that contain a vault_ prefix should be entered in `inventory/group_vars/all/vault.yml'
#####
vcenter:
  address: '10.1.223.196'
  username: "{{ vault_vcenter_username }}"
  password: "{{ vault_vcenter_password }}"
  datacenter: 'Datacenter'
  datastore: 'ds1'
  cluster: "New_Cluster"
  network: 'VM Network 2'
  resourcepool: 'New_Cluster/Resources/Anthos_1.3'
  cacertpath_gkeadm: "{{ local_secrets_path }}/vmware/vcenter.pem"
  cacertpath_gkectl: "{{ remote_secrets_path }}/vmware/vcenter.pem"

#####
# GKE Admin Workstation Configuration
#####
gke_admin_workstation:
  secrets_path: "{{ remote_secrets_path }}"
  proxyUrl: 'http://16.100.211.43:8888'
  name: 'gke-adm-test-7'
  cpus: '4'
  memoryMB: '8192'
  diskGB: '50'
  ntpServer: 'hou-ntp1.hcilabs.hpecorp.net'
  ipAllocationMode: 'dhcp'
  # For Static IP assignment uncomment and enter info below. Remove ipAllocationMode: 'dhcp' above.
  #ipAllocationMode: 'static'
  #ip: '192.168.1.10'
  #gateway: '192.168.1.1'
  #netmask: '255.255.255.0'
  #dns:
  #  - nameserver_ip
  #  - nameserver_ip
  # If you desire to deploy your GKE Admin Workstation to a different vsphere infrastructure, enter values here
  # and set 'enable: true'. If 'enable: false' then values from global vcenter config will be used.
  alt_vcenter:
    enable: false
    address: '10.1.223.196'
    username: "{{ vault_gkeadm_vcenter_username }}"
    password: "{{ vault_gkeadm_vcenter_password }}"
    datacenter: 'Datacenter'
    datastore: 'csi-2'
    cluster: 'New_Cluster'
    network: 'VM Network 2'
    resourcepool: 'New_Cluster/Resources/Anthos_1.3'
    cacertpath_gkeadm: "{{ local_secrets_path }}/vmware/vcenter.pem"

# Path to GKE Admin Workstation OVA file to install. If defined and valid gkeadm will use this file.
# If empty '' or invalid gkeadm will download the OVA into the directory defined by the variable 'output_directory:'
# gkeadm_ova_path: '/home/sgifford/Downloads/1.3.0-gke.16/gke-on-prem-admin-appliance-vsphere-1.3.0-gke.16.ova'
gkeadm_ova_path: ''

# Path/Filename where ansible should create the yaml config file for deploying the GKE Admin Workstation
gkeadm_config: '{{ local_secrets_path }}/admin-ws-config-{{ gke_admin_workstation.name }}.yaml'

# Path to ssh private key to install on GKE Admin Workstation
# This key will also be used by ansible to connect to admin workstation
ansible_ssh_private_key_file: '{{ local_secrets_path }}/dot-cfg-files/.ssh/vsphere_workstation'

#####
# Post deploy configuration of GKE Admin Workstation
# These are site specific.
#####

# Docker bip (base IP) can be changed if the default conflict with your environment
docker_bip: '192.68.0.1/16'

# A private Docker registry is commonly used in Air-Gapped installations
private_docker_registry: true
private_reg_ip: '16.100.209.193'
private_reg_port: '5005'
private_reg_cert_path_gkeadm: '{{ local_secrets_path }}/private_docker_reg/registry.crt'
private_reg_cert_path_gkectl: '{{ remote_secrets_path }}/private_docker_reg/registry.crt'
private_reg_username: 'me'
private_reg_password: 'you'

# Proxy definitions -- gkeadm will have it's own. For now these are needed for post deploy configuration
proxy_address: '16.100.208.216'
proxy_port: '8888'
proxy_type: 'http'
no_proxy: '.hcilabs.hpecorp.net,.simplivt.local'

# Path to directory containing desired .ssh directory contents that will be copied to GKE Admin Workstaion.
# Used for git repo cloning.
ssh_config_path: '{{ local_secrets_path }}/dot-cfg-files/.ssh'

# Path to repos to pull after deployment. Do not change anthos_deploy_git, but update the anthos_userdata_git entry.
anthos_deploy_git:
  repo_name: anthos_wrkstation_files
  repo_url: 'ssh://git@stash.simplivt.local:7999/soleng/anthos_wrkstation_files.git'
anthos_userdata_git:
  repo_name: gke_admin_wrkst_private
# Change this url to match your private user data repo path
  repo_url: 'ssh://git@stash.simplivt.local:7999/~sgifford/gke_admin_wrkst_private.git'

#####
# Varibles defining the directory configuration on the GKE Admin Workstation.
# ======= DO NOT CHANGE =======
#####

# Location of files generated by gkeadm during deployment of GKE Admin Workstation
output_directory: '/home/{{ ansible_user }}/output'
# Location of files generated on GKE Admin Workstation by gkectl during GKE on-prem cluster creation
log_directory: '/home/{{ ansible_user }}/logs'
# GKE Admin Workstation destination of admin and user cluster configuration yaml files. 
cluster_configurations_path: '/home/ubuntu/cluster-configurations'
# GKE Admin Workstation destination of admin and user cluster kubeconfig files generated when gkectl deploys clusters
cluster_kubeconfig_path: '/home/ubuntu/kubeconfigs'
# Setting name of admin kubeconfig here to be able to use it programatically later
admin_cluster_kubeconfig: 'kubeconfig'

#####
# GKE on-prem cluster configuration
#####

# GCP project to set.  gkeadm does not currently set this.
gcloud_project: 'deep-thought-259715'

# Common variables to all clusters
gke_bundle_path: '/var/lib/gke/bundles/gke-onprem-vsphere-{{ anthos_version }}-full.tgz'
gke_network_internal: 'gke-internal'
gke_cluster_resource_pool: 'Anthos_1.3'
gke_data_disk_name: 'test-deploy'
gke_cluster_vcenter_ssl_pub_key: '{{ gke_admin_workstation.secrets_path }}/vmware/vcenter.pem'
gke_register_sa_keypath: '{{ gke_admin_workstation.secrets_path }}/gkeonprem-keys/register-key.json'
gke_agent_sa_keypath: '{{ gke_admin_workstation.secrets_path }}/gkeonprem-keys/connect-key.json'
gke_auditlogging_sa_keypath: '{{ gke_admin_workstation.secrets_path }}/gkeonprem-keys/whitelisted-key.json'
gke_stackdriver_sa_keypath: '{{ gke_admin_workstation.secrets_path }}/gkeonprem-keys/stackdriver-key.json'
gke_whitelisted_keypath: '/home/{{ ansible_user }}/gke_admin_wrkst_private/gkeonprem-keys/whitelisted-key.json'

# Admin Cluster variables
# Variable to override the network setting in vcenter.network for the admin cluster
gke_admin_cluster_network: ''

# User Cluster variables ## FUTURE: move to gke_cluster_config for PER User cluster templating.
gke_user_cluster_network: ''
gke_user_cluster_masternode_cpu: '4'
gke_user_cluster_masternode_memory: '8192'
gke_user_cluster_masternode_replicas: '1'
gke_user_cluster_workernode_cpu: '4'
gke_user_cluster_workernode_memory: '8192'
gke_user_cluster_workernode_replicas: '3'
gke_cluster_location: 'us-east1'
enable_vpc: 'false'
enable_cloudrun: 'false'
gcp_region: 'us-east1'

#####
# GKE on-prem cluster configuration information.
# Only 1 admin cluster should be defined.  Multiple user clusters can be defined.
# gkenode.net allows for dhcp or static network definition.  If set to 'static' then all network information
# should be entered.  If set for 'dhcp' the network information will be ignored.
##### 

gke_cluster_config:
    - name: 'admin'
      type: 'admin'
      state: present
      f5_partition: 'Spanned_VIP'
      cluster_ctrl_vip: '172.17.0.21'
      cluster_ingress_vip: '172.17.0.22'
      datastore: '' #If left blank the global vcenter.datastore will be used
      gkenode_net:
        mode: 'dhcp'
        dns: '192.168.1.1'
        gateway: '192.168.1.1'
        netmask: '255.255.255.0'
        tod: 'hou-ntp1.hcilabs.hpecorp.net'
        search_domain: 'my.local.com'
        otherdns:
          - 8.8.8.8
          - 8.8.8.4
        othertod:
          - ntp.ubuntu.com
        ips:
         - ip: 192.168.1.10
           hostname: admin-host1
         - ip: 192.168.1.11
           hostname: admin-host2
         - ip: 192.168.1.12
           hostname: admin-host3
         - ip: 192.168.1.13
           hostname: admin-host4
         - ip: 192.168.1.14
           hostname: admin-host5
    - name: 'sg-test4-13'
      type: 'user'
      state: present
      f5_partition: 'Spanned_VIP_user'
      cluster_ctrl_vip: '172.17.0.69'
      cluster_ingress_vip: '172.17.0.72'
      csi_storageclass_name: 'test4-3-sc'
      csi_datastore_name: 'csi-3'
      csi_datastore_size: '20'
      datastore: ''
      gkenode_net:
        mode: 'dhcp'
        dns: '192.168.2.1'
        gateway: '192.168.2.1'
        netmask: '255.255.255.0'
        tod: 'hou-ntp1.hcilabs.hpecorp.net'
        search_domain: 'my.local.com'
        otherdns:
          - 8.8.8.8
          - 8.8.8.4
        othertod:
          - ntp.ubuntu.com
        ips:
         - ip: 192.168.2.10
           hostname: sg-test4-host1
         - ip: 192.168.2.11
           hostname: sg-test4-host2
         - ip: 192.168.2.12
           hostname: sg-test4-host3
         - ip: 192.168.2.13
           hostname: sg-test4-host4
         - ip: 192.168.2.14
           hostname: sg-test4-host5
    - name: 'sg-test5-13'
      type: 'user'
      state: present
      f5_partition: 'user2_VIP'
      cluster_ctrl_vip: '172.17.0.32'
      cluster_ingress_vip: '172.17.0.33'
      csi_storageclass_name: 'test5-sc'
      csi_datastore_name: 'ds1'
      csi_datastore_size: '20'
      datastore: 'csi-2'
      gkenode_net:
        mode: 'dhcp'
        dns: '192.168.3.1'
        gateway: '192.168.3.1'
        netmask: '255.255.255.0'
        tod: 'hou-ntp1.hcilabs.hpecorp.net'
        search_domain: 'my.local.com'
        otherdns:
          - 8.8.8.8
          - 8.8.8.4
        othertod:
          - ntp.ubuntu.com
        ips:
         - ip: 192.168.3.10
           hostname: sg-test5-host1
         - ip: 192.168.3.11
           hostname: sg-test5-host2
         - ip: 192.168.3.12
           hostname: sg-test5-host3
         - ip: 192.168.3.13
           hostname: sg-test5-host4
         - ip: 192.168.3.14
           hostname: sg-test5-host5

# Enable/Disable/Flags for the gkectl check-config execution. Recommend to run at least the first time.
# Flags to be added to gkectl command. See docs for explanation.
enable_config_check: true
gkectl_check_flags: '--skip-validation-vips --fast'

# Enable/Disable/Flags for the gkectl prepare execution. Required to run at least one time.
# Flags to be added to gkectl command. See docs for explanation.
gkectl_run_prepare: true
gkectl_prepare_flags: '--skip-validation-all'

# Enable/Disable/Flags for the gkectl create cluster execution. Required to enable admin at least on first run.
# Flags to be added to gkectl command. See docs for explanation.
create_admin_cluster: true
create_user_cluster: true
gkectl_create_flags: '--skip-validation-all'

#####
# F5 Configuration Information
# All varibles that contain a vault_ prefix should be entered in `inventory/group_vars/all/vault.yml'
#####

f5:
  provider:
    user: admin
    password: "{{ vault_f5_admin_password }}"
    server: 10.1.222.170
    validate_certs: no
    server_port: 443
  
  hostname: Morbo-F5-SG1.thehead.local
  admin_username: admin
  admin_password: "{{ vault_f5_admin_password }}"
  
  # Set to true to ensure config is saved to f5. DO NOT CHANGE
  save: true
  
  internal_vlan_name: internal
  internal_vlan_tag: 1700
  internal_vlan_selfip: 172.17.0.16
  internal_vlan_selfip_netmask: 255.255.224.0
  internal_vlan_selfip_name: gke-internal
  
  external_vlan_name: external
  external_vlan_tag: 1732
  external_vlan_selfip: 172.17.32.16
  external_vlan_selfip_netmask: 255.255.224.0
  external_vlan_selfip_name: gke-external
  
  license: 
    - { key: "{{ vault_f5_license_key }}", state: present }
  

#
# SimpliVity
#
simplivity_validate_certs: false
simplivity_appliances:
- 10.1.222.46
- 10.1.222.47
- 10.1.222.57