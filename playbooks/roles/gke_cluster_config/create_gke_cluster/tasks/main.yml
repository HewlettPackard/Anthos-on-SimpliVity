###                                                                             
# Copyright (2020) Hewlett Packard Enterprise Development LP                    
#                                                                               
# Licensed under the Apache License, Version 2.0 (the "License");               
# You may not use this file except in compliance with the License.              
# You may obtain a copy of the License at                                       
#                                                                               
# http://www.apache.org/licenses/LICENSE-2.0                                    
#                                                                               
# Unless required by applicable law or agreed to in writing, software           
# distributed under the License is distributed on an "AS IS" BASIS,             
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.      
# See the License for the specific language governing permissions and           
# limitations under the License.                                                
###                                                                             
---
- name: Get the IP for the current admin WS
  import_tasks: tasks/admin_ws_ip.yml

- name: Create directories on admin WS to hold output
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ cluster_configurations_path }}" 
    - "{{ cluster_kubeconfig_path }}"
    - "{{ log_directory }}"
    - "{{ gkeadm_basedir }}/{{ secrets_directory }}"

- name: Copy Anthos Secrets to admin WS
  copy:
    src: "{{ secrets_path }}/"
    dest: "{{ gkeadm_basedir }}/{{ secrets_directory }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Copy cluster configuration files to admin WS
  template:
    src: "{{ item.type }}-cluster-config.yaml.j2"
    dest: "{{ cluster_configurations_path }}/{{ item.name }}.yaml"
  with_items: "{{ gke_cluster_config }}"
  when: >
    anthos_version is version('1.3', operator='<=')

- name: Copy cluster configuration files to admin WS - version >=1.40
  template:
    src: "{{ item.type }}-cluster-config-v1.yaml.j2"
    dest: "{{ cluster_configurations_path }}/{{ item.name }}.yaml"
  with_items: "{{ gke_cluster_config }}"
  when: >
    anthos_version is version('1.4', operator='>=')

- name: Copy cluster IP configuration files to admin WS
  template:
    src: static-ip.yaml.j2
    dest: "{{ cluster_configurations_path }}/{{ item.name }}-ip.yaml"
  with_items: "{{ gke_cluster_config }}"
  when: "'static' in item.gkenode_net.mode"

- name: Check Anthos GKE on-prem Admin Cluster Configuration
  command: >
    gkectl check-config --config {{ cluster_configurations_path }}/{{ item.name }}.yaml
    --log_file ./logs/cluster-{{ item.name }}-checkconfig.log 
    {{ gkectl_check_flags }}
  delegate_to: gke-admin-ws
  register: gke_admin_cluster_check
  when: > 
     enable_config_check
     and create_admin_cluster
     and 'admin' in item.type
  loop: "{{ gke_cluster_config }}"
  until: gke_admin_cluster_check.rc == 0
  retries: 2
  delay: 2

- name: Running gkectl prepare to initialize vSphere Environment for Anthos GKE on-prem
  command: >
    gkectl prepare --config {{ cluster_configurations_path }}/{{ item.name }}.yaml
    --log_file ./logs/cluster-{{ item.name }}-prepare.log 
    {{ gkectl_prepare_flags }}
  delegate_to: gke-admin-ws
  register: gke_admin_cluster_prepare
  when: > 
     gkectl_run_prepare
     and 'admin' in item.type
  loop: "{{ gke_cluster_config }}"
  until: gke_admin_cluster_prepare.rc == 0
  retries: 2
  delay: 2

- name: Create Anthos GKE on-prem Admin Cluster 
  command: >
    gkectl create admin --config {{ cluster_configurations_path }}/{{ item.name }}.yaml
    --kubeconfig-out {{ cluster_kubeconfig_path }}/{{ admin_cluster_kubeconfig }} 
    --log_file ./logs/cluster-{{ item.name }}-create.log
    {{ gkectl_create_flags }}
  delegate_to: gke-admin-ws
  register: gke_admin_cluster_create
  when: >
    create_admin_cluster
    and 'admin' in item.type
  loop: "{{ gke_cluster_config }}"
  until: gke_admin_cluster_create.rc == 0
  retries: 2
  delay: 2

- name: Output Admin Cluster Create Status
  debug:
    msg: 
      - "{{ gke_admin_cluster_create | json_query('results[].stdout_lines') }}"
  when: create_admin_cluster

- name: Output Admin Cluster Create Status FULL
  debug:
    msg: "{{ gke_admin_cluster_create }}" 
    verbosity: 3

- name: Check Anthos GKE on-prem User Cluster Configuration
  command: >
    gkectl check-config --kubeconfig {{ cluster_kubeconfig_path }}/{{ admin_cluster_kubeconfig }} 
    --config {{ cluster_configurations_path }}/{{ item.name }}.yaml
    --log_file ./logs/user-cluster-{{ item.name.split('.')[0] }}-checkconfig.log 
    {{ gkectl_check_flags }}
  register: gke_user_cluster_check
  delegate_to: gke-admin-ws
  when: > 
    enable_config_check
    and create_user_cluster
    and 'user' in item.type
  loop: "{{ gke_cluster_config }}"
  until: gke_user_cluster_check.rc == 0 
  retries: 2
  delay: 2

- name: Create Anthos GKE on-prem User Cluster
  command: >
    gkectl create cluster --kubeconfig {{ cluster_kubeconfig_path }}/{{ admin_cluster_kubeconfig }}
    --config {{ cluster_configurations_path }}/{{ item.name }}.yaml
    --log_file ./logs/user-cluster-{{ item.name.split('.')[0] }}-create.log
    {{ gkectl_create_flags }}
  register: gke_user_cluster_create
  delegate_to: gke-admin-ws
  when: > 
    create_user_cluster
    and 'user' in item.type
  loop: "{{ gke_cluster_config }}"
  until: gke_user_cluster_create.rc == 0 
  retries: 2
  delay: 2

- name: Output Cluster Create Status FULL
  debug:
    msg: "{{ gke_user_cluster_create }}" 
    verbosity: 2

- name: Output Cluster Create Status Parsed
  debug:
    msg: "{{ gke_user_cluster_create | json_query('results[].stdout_lines') }}"
