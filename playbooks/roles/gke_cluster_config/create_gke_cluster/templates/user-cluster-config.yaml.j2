# Absolute path to a GKE bundle on disk
bundlepath: "{{ gke_bundle_path }}"
# Specify which vCenter resources to use for deployment
vcenter:
  # The credentials and address GKE should use to connect to vCenter
  credentials:
    address: "{{ vcenter.address }}"
    username: "{{ vault_vcenter_username }}"
    password: "{{ vault_vcenter_password }}"
  datacenter: "{{ vcenter.datacenter }}"
  datastore: "{{ item.datastore | default(vcenter.datastore, true) }}"
  cluster: "{{ vcenter.cluster }}"
  network: "{{ gke_network_internal }}"
  resourcepool: "{{ gke_cluster_resource_pool }}"
  # Provide the name for the persistent disk to be used by the deployment (ending
  # in .vmdk). Any directory in the supplied path must be created before deployment.
  # Not required when adding additional user clusters
  datadisk: "{{ gke_data_disk_name }}"
  # Provide the path to vCenter CA certificate pub key for SSL verification
  cacertpath: "{{ gkeadm_basedir }}/{{ secrets_directory }}/{{ vcenter.cacert }}"
# Specify the proxy configuration.
proxy:
  # The URL of the proxy
{% if gke_admin_workstation.proxyUrl is defined and gke_admin_workstation.proxyUrl | length %}
  url: "{{ gke_admin_workstation.proxyUrl }}"
{% else %}
  # url: ""
{% endif %}
  # The domains and IP addresses excluded from proxying
{% if no_proxy is defined and no_proxy | length %}
  noproxy: "{{ no_proxy }}"
{% else %}
  # noproxy: ""
{% endif %}
#
# Admin cluster defined in separate yaml file
#
usercluster:
  # In-Cluster vCenter configuration
  vcenter:
    # If specified it overwrites the network field in global vcenter configuration
    network: "{{ gke_user_cluster_network }}"
  # # The absolute or relative path to the yaml file to use for static IP allocation.
  # # Do not include if using DHCP
{% if item.gkenode_net.mode == 'static' %}
  ipblockfilepath: "{{ item.name }}-ip.yaml"
{% else %}
  #  ipblockfilepath: ""
{% endif %}
  # # Specify pre-defined nodeports if using "manual" load balancer mode
  # manuallbspec:
  #   ingresshttpnodeport: 30243
  #   ingresshttpsnodeport: 30879
  #   controlplanenodeport: 30562
  #   addonsnodeport: 0
  # Specify the already-existing partition and credentials to use with F5
  bigip:
    # To re-use credentials across clusters we recommend using YAML node anchors.
    # See https://yaml.org/spec/1.2/spec.html#id2785586
    credentials:
      address: "{{ f5.provider.server }}"
      username: "{{ f5.provider.user }}"
      password: "{{ f5.provider.password }}"
    partition: "{{ item.f5_partition }}"
    # # Optionally specify a pool name if using SNAT
    # snatpoolname: ""
  # The VIPs to use for load balancing
  vips:
    # Used to connect to the Kubernetes API
    controlplanevip: "{{ item.cluster_ctrl_vip }}"
    # Shared by all services for ingress traffic
    ingressvip: "{{ item.cluster_ingress_vip }}"
    # # Used for admin cluster addons (needed for multi cluster features). Must be the same
    # # across clusters
    # addonsvip: ""
  # A unique name for this cluster
  clustername: "{{ item.name }}"
  # User cluster master nodes must have either 1 or 3 replicas
  masternode:
    cpus: {{ gke_user_cluster_masternode_cpu | default(4) }}
    memorymb: {{ gke_user_cluster_masternode_memory | default(8192) }}
    # How many machines of this type to deploy
    replicas: {{ gke_user_cluster_masternode_replicas | default(1) }}
  # The number of worker nodes to deploy and their size. Min. 3 replicas
  workernode:
    cpus: {{ gke_user_cluster_workernode_cpu | default(4) }}
    memorymb: {{ gke_user_cluster_workernode_memory | default(8192) }}
    # How many machines of this type to deploy
    replicas: {{ gke_user_cluster_workernode_replicas | default(3) }}
  # The Kubernetes service CIDR range for the cluster
  serviceiprange: 10.96.0.0/12
  # The Kubernetes pod CIDR range for the cluster
  podiprange: 192.168.0.0/16
  # # Uncomment this section to use OIDC authentication
  # oidc:
  #   issuerurl: ""
  #   kubectlredirecturl: ""
  #   clientid: ""
  #   clientsecret: ""
  #   username: ""
  #   usernameprefix: ""
  #   group: ""
  #   groupprefix: ""
  #   scopes: ""
  #   extraparams: ""
  #   # Set value to string "true" or "false"
  #   usehttpproxy: ""
  #   # # The absolute or relative path to the CA file (optional)
  #   # capath: ""
  # # Optionally provide an additional serving certificate for the API server
  # sni:
  #   certpath: ""
  #   keypath: ""
  # # Specify whether or not to enable the GKE usage metering feature
  # usagemetering:
  #   bigqueryprojectid: ""
  #   # The ID of the BigQuery Dataset in which the usage metering data will be stored
  #   bigquerydatasetid: ""
  #   # The absolute or relative path to the key file for a GCP service account used by
  #   # gke-usage-metering to report to BigQuery
  #   bigqueryserviceaccountkeypath: ""
  #   # Whether or not to enable the consumption-based metering feature
  #   enableconsumptionmetering: false
# Which load balancer mode to use "Manual" or "Integrated"
lbmode: Integrated
# Specify which GCP project to connect your GKE clusters to
gkeconnect:
  projectid: "{{ gke_connect_projectid | default(gcloud_project, true) }}"
  # The absolute or relative path to the key file for a GCP service account used to
  # register the cluster
  registerserviceaccountkeypath: "{{ gkeadm_basedir }}/{{ secrets_directory }}/{{ gke_connectRegister_key }}"
  # The absolute or relative path to the key file for a GCP service account used by
  # the GKE connect agent
  agentserviceaccountkeypath: "{{ gkeadm_basedir }}/{{ secrets_directory }}/{{ gke_connectAgent_key }}"
  #proxy: "http://u:p@16.100.208.216:8888"
# Specify which GCP project to connect your logs and metrics to
stackdriver:
  projectid: "{{ gke_stackdriver_projectid | default(gcloud_project, true) }}"
  # A GCP region where you would like to store logs and metrics for this cluster.
  clusterlocation: "{{ gke_cluster_location }}"
  enablevpc: {{ enable_vpc }}
  # The absolute or relative path to the key file for a GCP service account used to
  # send logs and metrics from the cluster
  serviceaccountkeypath: "{{ gkeadm_basedir }}/{{ secrets_directory }}/{{ gke_stackdriver_key }}"
# Specify Cloud Run configuration
cloudrun:
  enabled: {{ enable_cloudrun }}
# # Optionally use a private Docker registry to host GKE images
{% if private_docker_registry %}
privateregistryconfig:
  # Do not include the scheme with your registry address
  credentials:
    address: "{{ private_reg_ip }}:{{ private_reg_port }}"
    username: "{{ private_reg_username }}"
    password: "{{ private_reg_password }}"
#   # The absolute or relative path to the CA certificate for this registry
  cacertpath: "{{ gkeadm_basedir }}/{{ secrets_directory }}/{{ private_reg_cert }}"
{% else %}
# privateregistryconfig:
#   # Do not include the scheme with your registry address
#   credentials:
#     address: ""
#     username: ""
#     password: ""
#   # The absolute or relative path to the CA certificate for this registry
#   cacertpath: ""
{% endif %}
# The absolute or relative path to the GCP service account key that will be used to
# pull GKE images
gcrkeypath: "{{ gkeadm_basedir }}/{{ secrets_directory }}/{{ gke_whitelisted_key }}"
# Configure kubernetes apiserver audit logging
cloudauditlogging:
  projectid: "{{ gke_cloudauditlogging_projectid | default(gcloud_project, true) }}"
  # A GCP region where you would like to store audit logs for this cluster.
  clusterlocation: "{{ gcp_region }}"
  # The absolute or relative path to the key file for a GCP service account used to
  # send audit logs from the cluster
  serviceaccountkeypath: "{{ gkeadm_basedir }}/{{ secrets_directory }}/{{ gke_auditLogging_key }}"
