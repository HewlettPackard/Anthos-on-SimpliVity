###                                                                             
# Copyright (2020) Hewlett Packard Enterprise Development LP                    
#                                                                               
# Licensed under the Apache License, Version 2.0 (the "License");               
# You may not use this file except in compliance with the License.              
# You may obtain a copy of the License at                                       
#                                                                               
# http://www.apache.org/licenses/LICENSE-2.0                                    
#                                                                               
# Unless required by applicable law or agreed to in writing, software           
# distributed under the License is distributed on an "AS IS" BASIS,             
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.      
# See the License for the specific language governing permissions and           
# limitations under the License.                                                
###                                                                             
---
# tasks file for service-mesh

- name: Get the IP for the current admin WS
  import_tasks: tasks/admin_ws_ip.yml

- name: Clear env if proxyUrl is not defined
  set_fact:
    env: {}
  when: gke_admin_workstation.proxyUrl is not defined

- name: Set env if proxyUrl is defined
  set_fact:
    env:
      http_proxy: "{{ gke_admin_workstation.proxyUrl }}"
      https_proxy: "{{ gke_admin_workstation.proxyUrl }}"
      no_proxy: "{{ no_proxy }}"
  when: gke_admin_workstation.proxyUrl is defined

# Grant cluster admin permissions to current user


# Download istio tar ball
- name: Download tar archive signature file for Service Mesh
  get_url:
      dest: "{{ gkeadm_basedir }}"
      url: "{{ istio_tar_file_url }}" 
  environment: "{{ env }}"

- name: Download tar archive for Service Mesh
  get_url:
      dest: "{{ gkeadm_basedir }}"
      url:  "{{ istio_tar_file_sig }}"
  environment: "{{ env }}"

- name: Copy pub key to GKE Admin Workstation
  become: no
  copy:
    src: gcp_public_key.pem
    dest: "{{ gkeadm_basedir }}/gcp_public_key.pem"

- name: Verify downloaded tar file
  shell:
    cmd: >
      openssl dgst -verify gcp_public_key.pem
      -signature {{ istio_tar_file_sig | basename }}
      {{ istio_tar_file_url | basename }}
  register: verify_istio

- debug:
    msg: "{{ verify_istio }}"
    verbosity: 2 

# Extract tarball
- name: Extract the istio tar file
  unarchive:
    src: "{{ istio_tar_file_url | basename }}"
    dest: "{{ gkeadm_basedir }}"
    remote_src: yes
  register: istio_extract

- debug:
    msg: "{{ istio_extract }}"
    verbosity: 2