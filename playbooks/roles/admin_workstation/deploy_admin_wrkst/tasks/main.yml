---
# tasks file for anthos_deploy_admin_wrkst

- name: Check if gke admin workstation exists
  become: false
  vmware_guest_info:
    hostname: "{{ vCenter.credentials.address }}"
    username: "{{ vCenter.credentials.username }}"
    password: "{{ vCenter.credentials.password }}"
    datacenter: "{{ vCenter.datacenter }}"
    name: "{{ adminWorkstation.name }}"
    validate_certs: no
  delegate_to: localhost
  register: admin_wrkst_info
  failed_when: false

- debug:
    msg: "{{ admin_wrkst_info }}"
    verbosity: 2

- name: Set flag for running gkeadm based on existance (or not) of VM
  set_fact:
    run_gkeadm: true
  when: >
    admin_wrkst_info.msg is defined and 'non-existing VM' in admin_wrkst_info.msg
    or 'non-existing VM' in admin_wrkst_info
    or admin_wrkst_info.failed
  failed_when: false

- name: Use Google gkeadm to deploy gke admin workstation
  become: false
  command: "{{ gkeadm_command }}"
  register: gkeadm_output
  args:
    chdir: "{{ output_directory }}"
  delegate_to: localhost
  when: run_gkeadm is defined
    

- debug: 
    msg: "{{ gkeadm_output }}"
    verbosity: 2

#- name: Pull IP from gkeadm
#  set_fact:
#    gke_adm_wrkst: "{{ gkeadm_output.stdout | regex_search(regexp, '\\1') }}"
#  vars:
#    regexp: 'ubuntu@\b(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\b'
#
#- debug: 
#    msg: " IP from stdout is {{ gke_adm_wrkst }}"

- name: Output name of admin workstation
  debug:
    msg: "{{ adminWorkstation.name }}"
    verbosity: 2 

- name: Read gkeadm file from disk
  become: false
  delegate_to: localhost
  vars:
    contents: "{{ lookup('file', '{{ output_directory }}/{{ adminWorkstation.name }}') }}"
    regexp: 'ubuntu@\b(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\b'
  set_fact:
    gke_adm_wrkst_ip_ff: "{{ contents | regex_search(regexp, '\\1') }}"

- name: Add host to running inventory
  add_host:
    hostname: "{{ inventory_hostname }}"
    groups:
      - anthos_admin
    ansible_host: "{{ gke_adm_wrkst_ip_ff | join('.') }}"
