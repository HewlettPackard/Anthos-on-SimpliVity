###                                                                             
# Copyright (2020) Hewlett Packard Enterprise Development LP                    
#                                                                               
# Licensed under the Apache License, Version 2.0 (the "License");               
# You may not use this file except in compliance with the License.              
# You may obtain a copy of the License at                                       
#                                                                               
# http://www.apache.org/licenses/LICENSE-2.0                                    
#                                                                               
# Unless required by applicable law or agreed to in writing, software           
# distributed under the License is distributed on an "AS IS" BASIS,             
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.      
# See the License for the specific language governing permissions and           
# limitations under the License.                                                
###                                                                             
---
# tasks file for prereqs
- name: Create required directories
  become: false 
  file:
    path: "{{ item }}"
    state: directory
  with_items:
      - "{{ output_directory }}"
      - "{{ secrets_path }}"

- name: Clear env if proxyUrl is not defined
  set_fact:
    env: {}
  when: not proxy_enabled

- name: Set env if proxyUrl is defined
  set_fact:
    env:
      http_proxy: "{{ proxyUrl }}"
      https_proxy: "{{ proxyUrl }}"
      no_proxy: "{{ no_proxy }}"
  when: proxy_enabled

- name: Install Google repo file for Debian
  vars:
    ansible_python_interpreter: "{{ role_python }}"
  apt_repository:
    repo: deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main
    state: present
    update_cache: no
    filename: google-cloud-sdk
  when: ansible_os_family == 'Debian'

- name: Install Google repo file for RedHat
  vars:
    ansible_python_interpreter: "{{ role_python }}"
  yum_repository:
      name: Google-Cloud-SDK
      description: Googles Repository
      enabled: yes
      file: google-cloud-sdk
      repo_gpgcheck: yes
      gpgkey:
        - https://packages.cloud.google.com/yum/doc/yum-key.gpg
        - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      state: present
      gpgcheck: yes
      baseurl: https://packages.cloud.google.com/yum/repos/cloud-sdk-el7-x86_64
  environment: "{{ env }}"
  when: ansible_os_family == 'RedHat'

- name: Install Google repository key for Debian
  vars:
    ansible_python_interpreter: "{{ role_python }}"
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
    keyring: /usr/share/keyrings/cloud.google.gpg
  environment: "{{ env }}"
  when: ansible_os_family == 'Debian'

- name: Install required packages for Cloud SDK Debian
  vars:
    ansible_python_interpreter: "{{ role_python }}"
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - gnupg
      - google-cloud-sdk
    state: present
    update_cache: yes
  environment: "{{ env }}"
  when: ansible_os_family == 'Debian'

- name: Install required packages for Cloud SDK on RedHat
  vars:
    ansible_python_interpreter: "{{ role_python }}"
  yum:
    name:
      - google-cloud-sdk
    state: present
    update_cache: yes
  environment: "{{ env }}"
  when: ansible_os_family == 'RedHat'

- name: Configure gcloud project and proxy
  become: false
  shell: |
    gcloud config set proxy/type "{{ proxy_type }}"
    gcloud config set proxy/address "{{ proxy_address }}"
    gcloud config set proxy/port "{{ proxy_port }}"
  when: proxy_enabled

- name: Configure gcloud project
  become: false
  shell: |
    gcloud config set project "{{ gcloud_project }}"

- name: Activate GCP whitelisted key
  become: false
  command: |
    gcloud auth activate-service-account --project {{ gcloud_project }} --key-file {{ secrets_path }}/{{ gke_whitelisted_key | default('whitelisted-key.json') }}

- name: Configure gcloud required apis
  become: false
  command: >
    gcloud services enable
      anthos.googleapis.com 
      anthosgke.googleapis.com 
      cloudresourcemanager.googleapis.com 
      container.googleapis.com 
      gkeconnect.googleapis.com 
      gkehub.googleapis.com 
      serviceusage.googleapis.com 
      stackdriver.googleapis.com 
      monitoring.googleapis.com 
      logging.googleapis.com

- name: Check for existance of gkeadm binary locally
  stat:
    path: /usr/local/bin/gkeadm
  register: gkeadm_check

- name: If gkeadm exists then check version against desired
  become: false
  shell: |
    /usr/local/bin/gkeadm version --log_file /dev/null
  register: gkeadm_check_version
  when: gkeadm_check.stat.exists == true
    
- debug:
    msg: "{{ gkeadm_check_version }}"
    verbosity: 2

- name: Download gkeadm binary if it doesn't exist or is wrong version
  become: false
  shell: |
    gsutil cp gs://gke-on-prem-release-public/gkeadm/{{ anthos_version }}/linux/gkeadm /tmp
  when: >
    gkeadm_check.stat.exists == false
    or '"anthos_version" not in gkeadm_check_version.stdout_lines'

- name: Move gkeadm and set execute permissions
  copy:
    src: /tmp/gkeadm
    dest: /usr/local/bin/gkeadm
    mode: 0655
    force: yes
  when: >
    gkeadm_check.stat.exists == false
    or '"anthos_version" not in gkeadm_check_version.stdout_lines'
