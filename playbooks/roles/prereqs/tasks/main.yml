---
# tasks file for prereqs
- name: Check filesystem
  include_tasks:
      file: tasks/prereq_for_download.yml

- name: Create Output directory
  become: false 
  file:
    path: "{{ output_directory }}"
    state: directory

- name: Clear env if proxyUrl is not defined
  set_fact:
    env: {}
  when: gke_admin_workstation.proxyUrl is not defined

- name: Set env if proxyUrl is defined
  set_fact:
    env:
      http_proxy: "{{ gke_admin_workstation.proxyUrl }}"
      https_proxy: "{{ gke_admin_workstation.proxyUrl }}"
      no_proxy: "{{ no_proxy }}"
  when: gke_admin_workstation.proxyUrl is defined

- name: Install Google repo file for Debian
  vars:
    ansible_python_interpreter: "{{ role_python }}"
  apt_repository:
    repo: deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main
    state: present
    update_cache: no
    filename: google-cloud-sdk
  when: ansible_os_family == 'Debian'

- name: Install Google repo file for RedHat
  vars:
    ansible_python_interpreter: "{{ role_python }}"
  yum_repository:
      name: Google Cloud SDK
      enabled: yes
      file: google-cloud-sdk
      repo_gpgcheck: yes
      gpgkey:
        - https://packages.cloud.google.com/yum/doc/yum-key.gpg
        - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      state: present
      gpgcheck: yes
      baseurl: https://packages.cloud.google.com/yum/repos/cloud-sdk-el7-x86_64
  environment: "{{ env }}"
  when: ansible_os_family == 'RedHat'

- name: Install Google repository key for Debian
  vars:
    ansible_python_interpreter: "{{ role_python }}"
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
    keyring: /usr/share/keyrings/cloud.google.gpg
  environment: "{{ env }}"
  when: ansible_os_family == 'Debian'

- name: Install required packages for Cloud SDK Debian
  vars:
    ansible_python_interpreter: "{{ role_python }}"
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - gnupg
      - google-cloud-sdk
    state: present
    update_cache: yes
  environment: "{{ env }}"
  when: ansible_os_family == 'Debian'

- name: Install required packages for Cloud SDK on RedHat
  vars:
    ansible_python_interpreter: "{{ role_python }}"
  yum:
    name:
      - google-cloud-sdk
    state: present
    update_cache: yes
  environment: "{{ env }}"
  when: ansible_os_family == 'RedHat'

- name: Configure gcloud project and proxy
  become: false
  shell: |
    gcloud config set project "{{ gcloud_project }}"
    gcloud config set proxy/type "{{ proxy_type }}"
    gcloud config set proxy/address "{{ proxy_address }}"
    gcloud config set proxy/port "{{ proxy_port }}"

- name: Configure gcloud required apis
  become: false
  command: >
    gcloud services enable
      anthos.googleapis.com 
      anthosgke.googleapis.com 
      cloudresourcemanager.googleapis.com 
      container.googleapis.com 
      gkeconnect.googleapis.com 
      gkehub.googleapis.com 
      serviceusage.googleapis.com 
      stackdriver.googleapis.com 
      monitoring.googleapis.com 
      logging.googleapis.com

- name: Activate GCP whitelisted key
  become: false
  command: |
    gcloud auth activate-service-account --project {{ gcloud_project }} --key-file {{ gke_whitelisted_keypath }}

- name: Check for existance of gkeadm binary locally
  stat:
    path: /usr/local/bin/gkeadm
  register: gkeadm_check
    
- name: Download gkeadm binary if it doesn't exist
  become: false
  shell: |
    gsutil cp gs://gke-on-prem-release-public/gkeadm/{{ anthos_version }}/linux/gkeadm /tmp
  when: gkeadm_check.stat.exists == false

- name: Move gkeadm and set execute permissions
  copy:
    src: /tmp/gkeadm
    dest: /usr/local/bin/gkeadm
    mode: 0655
  when: gkeadm_check.stat.exists == false